/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package lib.editor.ui.data;

import java.util.List;
import javax.swing.JPanel;
import lib.editor.data.game.AbstractData;
import lib.editor.widget.inspector.Inspector;
import lib.editor.widget.tree.item.TreeItem;
import lib.editor.widget.tree.item.TreeItemData;

/**
 *
 * @author gaetan
 */
public class DatabasePanel extends AbstractDatabasePanel {

    /**
     * Creates new form mappanel
     */
    public DatabasePanel() {
        initComponents();
        databaseTree.setDataPanel(this);
        
        //rightPanel.setBackground(Color.cyan);
        //rightPanel.setBorder(new EmptyBorder(0, 0,0,0));
    }
    
    public void setup(String dataName, String iconFilename, Class dataClass){
        databaseTree.setup(this, dataName, iconFilename, dataClass);
    }
    
    public void dataChanged(AbstractData data){
        Inspector.getRightInspector().setup(this, data);
    }
    
    public void save(){
        databaseTree.save();
        clearDataCache();
    }
    
    public void load(){
        //databaseTree.load();
    }
    
    public JPanel getRightPanel(){
        return rightPanel;
    }
    
    @Override
    public void selected(){
        dataChanged(getCurrentData());
        getRightPanel().removeAll();
        getRightPanel().add(Inspector.getRightInspector().scrollPane);
    }
    
    public AbstractData getCurrentData(){
        return databaseTree.getCurrentData();
    }
    
    @Override
    public void currentDataModified(){
        //System.out.println(databaseTree.modifiedItems.size());
        if(databaseTree.getCurrentItem() instanceof TreeItemData){
            if(!databaseTree.modifiedItems.contains(databaseTree.getCurrentItem())){
                databaseTree.modifiedItems.add((TreeItemData) databaseTree.getCurrentItem());
            }
        }
        super.currentDataModified();
    }
    
    public void clearDataCache(){
        List<TreeItem> items = databaseTree.getItems();
        for(TreeItem item : items){
            if(!(item instanceof TreeItemData)){
                continue;
            }
            
            TreeItemData dataItem = (TreeItemData) item;
            dataItem.data = null;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        middlePanel = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        databaseTree = new lib.editor.widget.tree.tree.DatabaseTree();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jSplitPane2.setResizeWeight(1.0);

        middlePanel.setLayout(new javax.swing.BoxLayout(middlePanel, javax.swing.BoxLayout.LINE_AXIS));
        jSplitPane2.setLeftComponent(middlePanel);

        rightPanel.setLayout(new javax.swing.BoxLayout(rightPanel, javax.swing.BoxLayout.LINE_AXIS));
        jSplitPane2.setRightComponent(rightPanel);

        jSplitPane1.setRightComponent(jSplitPane2);

        leftPanel.setLayout(new javax.swing.BoxLayout(leftPanel, javax.swing.BoxLayout.PAGE_AXIS));

        jScrollPane1.setViewportView(databaseTree);

        leftPanel.add(jScrollPane1);

        jSplitPane1.setLeftComponent(leftPanel);

        add(jSplitPane1);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public lib.editor.widget.tree.tree.DatabaseTree databaseTree;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    public javax.swing.JPanel leftPanel;
    public javax.swing.JPanel middlePanel;
    private javax.swing.JPanel rightPanel;
    // End of variables declaration//GEN-END:variables

    public AbstractData getCurrentNamableData() {
        return getCurrentData();
    }
    
    public TreeItem getCurrentItem() {
        return databaseTree.getCurrentItem();
    }
}
